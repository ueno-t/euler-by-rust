/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with and , the first terms will be:
/// `1,2,3,5,8,13,21,34,55,89,...`
/// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
pub fn solver(n: i32) -> i32 {
    create_fibonacci_sequence(n)
        .iter()
        .filter(|&x| x % 2 == 0)
        .sum()
}

fn create_fibonacci_sequence(n: i32) -> Vec<i32> {
    let mut a = 0;
    let mut b = 1;
    let mut fib = a + b;
    let mut sequence = vec![a, b];

    while fib < n {
        a = b;
        b = fib;
        fib = a + b;
        sequence.push(fib);
    }
    sequence
}

#[cfg(test)]
mod tests {
    use super::*;
    #[test]
    fn should_return_4613732() {
        assert_eq!(solver(4000000), 4613732);
    }
}
